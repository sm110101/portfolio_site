# Quarto Tips

## File Types

You can decide when to use `.qmd` vs `.ipynb` for structuring your code, but I recommend the following guidelines:

1. If the file contains **any code** (either in `R` or `Python`), ALWAYS use `.ipynb`.
2. Do not mix `R` and `Python` in the same notebook.
3. If the file is **purely markdown** without code, use `.qmd`.
4. Use Quarto includes to modularize your content (see below for more details). This is also demonstrated in the project skeleton.

## Quarto Includes

Quarto includes (e.g., `{{< include _content.qmd >}}`) are highly recommended for modularizing and organizing your content. While optional, they offer several advantages.

`Note`: You can include a `.qmd` file in a `.ipynb` file, but not vice versa.

### Why Use Quarto Includes?

1. **Modularization**: Breaking your project into smaller, reusable chunks simplifies the management of complex documents. You can work on specific sections without altering the entire project.
  
2. **Reusability**: Includes allow you to reuse content blocks across multiple documents, making them ideal for repetitive sections like headers or footers.

3. **Consistency**: By using includes, you ensure uniformity across your documents. Updating an include file will automatically apply the changes wherever it's used.

4. **Simplifies Collaboration**: In team settings, includes allow different contributors to work on separate sections simultaneously, reducing merge conflicts and making the project easier to maintain.

5. **Improved Organization**: Includes help keep your main files clean and focused by loading content from separate, well-organized files. This makes your project more manageable and easier to navigate.
